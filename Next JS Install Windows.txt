Quick Start

01 - Create a new Next.js app named my-app
02 - cd my-app and start the dev server.
03 - Visit http://localhost:3000.


pnpm :
pnpm create next-app@latest my-app --yes
cd my-app
pnpm dev

npm :
npx create-next-app@latest my-app --yes
cd my-app
npm run dev

yarn :
yarn create next-app@latest my-app --yes
cd my-app
yarn dev

bun :
bun create next-app@latest my-app --yes
cd my-app
bun dev


Create with the CLI :
npx create-next-app@latest

On installation, you'll see the following prompts :
What is your project named? my-app
Would you like to use TypeScript? No / Yes
Would you like to use ESLint? No / Yes
Would you like to use Tailwind CSS? No / Yes
Would you like your code inside a `src/` directory? No / Yes
Would you like to use App Router? (recommended) No / Yes
Would you like to use Turbopack? (recommended) No / Yes
Would you like to customize the import alias (`@/*` by default)? No / Yes
What import alias would you like configured? @/*


create-next-app :
npx create-next-app@latest [project-name] [options]

Reference :
Options					Description
-h or --help				=> Show all available options
-v or --version				=> Output the version number
--no-*					=> Negate default options. E.g. --no-ts
--ts or --typescript			=> Initialize as a TypeScript project (default)
--js or --javascript			=> Initialize as a JavaScript project
--tailwind				=> Initialize with Tailwind CSS config (default)
--eslint				=> Initialize with ESLint config
--biome					=> Initialize with Biome config
--no-linter				=> Skip linter configuration
--app					=> Initialize as an App Router project
--api					=> Initialize a project with only route handlers
--src-dir				=> Initialize inside a src/ directory
--turbopack				=> Enable Turbopack by default for development
--import-alias <alias-to-configure>	=> Specify import alias to use (default "@/*")
--empty					=> Initialize an empty project
--use-npm				=> Explicitly tell the CLI to bootstrap the application using npm
--use-pnpm				=> Explicitly tell the CLI to bootstrap the application using pnpm
--use-yarn				=> Explicitly tell the CLI to bootstrap the application using Yarn
--use-bun				=> Explicitly tell the CLI to bootstrap the application using Bun
-e or --example [name] [github-url]	=> An example to bootstrap the app with
--example-path <path-to-example>	=> Specify the path to the example separately
--reset-preferences			=> Explicitly tell the CLI to reset any stored preferences
--skip-install				=> Explicitly tell the CLI to skip installing packages
--disable-git				=> Explicitly tell the CLI to disable git initialization
--yes					=> Use previous preferences or defaults for all options



